# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker
trigger:
- '*'

resources:
- repo: self

variables:
- group: publish-keys
- name : TAGVar 
  value: 'armonik-dev-$(Build.BuildId)'
- name : buildsuffix
  value: ""

stages:
- stage: AWS
  displayName: AWS Deployment / Test
  jobs:
  - job: LocalBuild
    displayName: Local Build
    strategy:
      matrix:
        Mode-Release:
           buildmode: 'Release'
           buildsuffix: ''  

    pool:
      name : $(AgentPoolName)
      vmImage : 'ubuntu-20.04'
    steps:
      - task: UseDotNet@2
        inputs:
          packageType: 'sdk'
          version: '5.0.x'
      - script: |
          set -xe
          export AWS_ACCESS_KEY_ID=$(AWSID)
          export AWS_SECRET_ACCESS_KEY=$(AWSAccessKey)
          export AWS_DEFAULT_REGION=$(AWSRegion)
          cp configure/aws-config.conf ./envvars.conf
          source ./envvars.conf
          export ARMONIK_TAG=$(TAGVar)-aws
          aws ecr get-login-password --region $ARMONIK_REGION | docker login --username AWS --password-stdin $ARMONIK_DOCKER_REGISTRY
          make all
          make init-grid-state
          make init-grid-deployment
          make apply-dotnet-runtime
          kubectl apply -f ./generated/single-task-dotnet5.0.yaml
          sleep 60
          kubectl logs job/single-task -f
          kubectl delete -f ./generated/single-task-dotnet5.0.yaml
          make destroy-dotnet-runtime
          make delete-grid-state
        displayName: Execution



