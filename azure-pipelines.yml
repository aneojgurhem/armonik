# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker
trigger:
- '*'

resources:
- repo: self

variables:
- group: publish-keys
- name : TAGVar
  value: 'armonik-dev-$(Build.BuildId)'
- name : buildsuffix
  value: ""

stages:
- stage: AWS
  displayName: AWS Deployment / Test
  jobs:
  - job: LocalBuild
    displayName: Local Build
    strategy:
      matrix:
        Mode-Release:
           buildmode: 'Release'
           buildsuffix: ''

    pool:
      name : $(AgentPoolName)
      vmImage : 'ubuntu-20.04'
    steps:
      - task: UseDotNet@2
        inputs:
          packageType: 'sdk'
          version: '5.0.x'
      - script : |
          set -xe
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh
        displayName: Install Helm
      - script: |
          set -xe
          sudo curl -fsSL https://github.com/k3s-io/k3s/releases/latest/download/k3s -o /usr/local/bin/k3s
          sudo chmod 755 /usr/local/bin/k3s
          sudo ln -s k3s /usr/local/bin/kubectl
          sudo ln -s k3s /usr/local/bin/crictl
          sudo cp cicd/azure/k3s.service /etc/systemd/system/
          sudo systemctl daemon-reload
          sudo systemctl start k3s
          mkdir -p ~/.kube
          cp /etc/rancher/k3s/k3s.yaml ~/.kube/config
        displayName: Install K3s
      - script : |
          set -xe
          sudo apt-get update && sudo apt-get install -y gnupg software-properties-common curl
          sudo curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install terraform
        displayName: Install terraform
      - script: |
          f() { local rc; "$@" ; rc=$? ; [ "${RC:-0}" = 0 ] && RC="$rc" ; }
          g() { return "${RC:-0}" ; }
          set -xe
          sudo apt-get update -y && sudo apt-get install -y awscli docker.io python3 python3-pip python3-wheel jq python-is-python3
          sudo chown :sudo /var/run/docker.sock
          export AWS_ACCESS_KEY_ID=$(AWSID)
          export AWS_SECRET_ACCESS_KEY=$(AWSAccessKey)
          export AWS_DEFAULT_REGION=$(AWSRegion)
          cp configure/aws-config.conf ./envvars.conf
          source ./envvars.conf
          export ARMONIK_TAG=$(TAGVar)-aws
          aws ecr get-login-password --region $ARMONIK_REGION | docker login --username AWS --password-stdin $ARMONIK_DOCKER_REGISTRY
          make all
          make init-grid-state
          set +e
          f make init-grid-deployment
          f make apply-dotnet-runtime
          f kubectl apply -f ./generated/single-task-dotnet5.0.yaml
          sleep 60
          f kubectl logs job/single-task -f
          f kubectl delete -f ./generated/single-task-dotnet5.0.yaml
          f make destroy-dotnet-runtime
          f make delete-grid-state
          g
        displayName: Execution



